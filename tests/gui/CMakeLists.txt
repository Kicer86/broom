
find_package(Threads REQUIRED)
find_package(Qt5Gui REQUIRED)
find_package(Qt5Widgets REQUIRED)
find_package(OpenLibrary 2.0 REQUIRED utils QtExt)
find_package(GMock REQUIRED)
find_package(GTest REQUIRED)

set(BASE_DIR ${CMAKE_SOURCE_DIR}/src/gui)

get_target_property(gui_include_dirs gui INCLUDE_DIRECTORIES)
get_target_property(gui_raw_srcs gui SOURCES)
get_target_property(gui_link_libraries gui LINK_LIBRARIES)

include_directories(${gui_include_dirs} ${BASE_DIR} .)
include_directories(SYSTEM ${GMOCK_INCLUDE_DIRS} ${GTEST_INCLUDE_DIRS})

foreach(source ${gui_raw_srcs})
    if (IS_ABSOLUTE ${source})
        list(APPEND gui_srcs ${source})

        #is path is absolute and does not exist, then it's a moc file - mark it as autogenerated
        if(NOT EXISTS ${source})
            set_source_files_properties(${source} PROPERTIES GENERATED TRUE)
        endif()
    else()    
        list(APPEND gui_srcs ${BASE_DIR}/${source})
    endif()
endforeach()

set(SRC
        ${gui_srcs}
        model/idx_data_manager_tests.cpp

        view/data_tests.cpp
        view/positions_calculator_tests.cpp
        view/positions_reseter_tests.cpp

        mock_configuration.hpp
        mock_database.hpp
        mock_qabstractitemmodel.hpp
        
        internal_task_executor.cpp
        internal_task_executor.hpp
        
        main.cpp
    )

add_executable(gui_tests ${SRC} ${GUI_WRAPPED_CPP})

target_link_libraries(gui_tests PRIVATE ${gui_link_libraries} ${GMOCK_LIBRARY} ${CMAKE_THREAD_LIBS_INIT})
turnOnCpp11(gui_tests)
enableCodeCoverage(gui_tests)

add_test(gui gui_tests)
