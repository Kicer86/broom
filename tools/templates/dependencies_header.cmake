
project(third_party_libraries)

cmake_minimum_required(VERSION 3.0)

include(ExternalProject)

if(UNIX)
    set(INSTALL_DIR ${PROJECT_SOURCE_DIR}/usr)
else()
    set(INSTALL_DIR ${PROJECT_SOURCE_DIR}/install)
endif()

set(INSTALL_LOCATION ${INSTALL_DIR} CACHE PATH "Installation location")
set(COMMON_OPTIONS -DCMAKE_INSTALL_PREFIX=${INSTALL_LOCATION})
set(OPTIONS_TO_INHERITE
    CMAKE_AR
    CMAKE_BUILD_TYPE
    CMAKE_CXX_COMPILER
    CMAKE_CXX_FLAGS_RELEASE
    CMAKE_C_COMPILER
    CMAKE_C_FLAGS_RELEASE
    CMAKE_EXE_LINKER_FLAGS_RELEASE
    CMAKE_LINKER
    CMAKE_MAKE_PROGRAM
    CMAKE_MODULE_LINKER_FLAGS_RELEASE
    CMAKE_NM
    CMAKE_OBJCOPY
    CMAKE_OBJDUMP
    CMAKE_RANLIB
    CMAKE_RC_COMPILER
    CMAKE_SHARED_LINKER_FLAGS_RELEASE
    CMAKE_STRIP
)

foreach(VAR IN LISTS OPTIONS_TO_INHERITE)
    list(APPEND COMMON_OPTIONS -D${VAR}=${${VAR}})
endforeach()

find_program(GIT_EXECUTABLE git)
find_program(PATCH_EXECUTABLE patch)
