
Before first build update git submodules with:
git submodule update --init --recursive

or clone whole repo with --recursive option:

git clone --recursive https://github.com/Kicer86/photobroom.git


Required tools and libraries:
 - cmake - version 3.8 or later
 - Qt5 - version 5.7 or higher
 - exiv2*
 - jsoncpp*
 - OpenLibrary*
 - pybind11*

 Optional libraries:
 - KCrash + drkonqi (for crash catching)
 - GMock and GTest  (unit tests)

 Optional python modules required for face recognition:
 - dlib
 - face_recognition
 - face_recognition_models
 - pillow

* For convenience it is possible to use python script
  for download, build and install all marked libraries
  (python 3.5 at least is required).
  If you want to use it run prepared_dependencies.py from tools directory.
  Pass --help to get information about usage.
  Exiv2 requires 'expat' and 'zlib' to build, so these two packages
  are also available for convenience.

Tested compilers (with c++17 support):
1. gcc (Linux and Windows)

2. clang (Linux)

3. Visual studio 2017 (Windows)


PhotoBroom cannot be run from build directory without installation step.
On Linux it will search for plugins in destination (installation) directory.
Build 'install' target to install PhotoBroom. Then you can launch it.
On Windows operating system, PhotoBroom searches for plugins and translations,
in location relative to exe file.

There is CMake DEVELOPER_BUILD variable available to ease debugging.
On Windows, DEVELOPER_BUILD option will force PhotoBroom to look for plugins and translations in location
defined by CMAKE_INSTALL_PREFIX (so as it does on Linux) not in build directory.

Extra targets available for Windows:
'deploy'  prepares extra dir with all external dependencies required by PhotoBroom.
'install' install PhotoBroom with all external dependencies
'package' target will create a package (Installator) with all files required for running
          PhotoBroom on other Windows machines.
