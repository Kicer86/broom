
Required tools and libraries:
 - cmake - version 3.0 or later
 - Qt5 - version 5.4 or higher
 - OpenSSL or Nettle
 - Exiv2 of easyexif*
 - Boost
 - OpenMP (optional)
 - OpenLibrary

* PhotoBroom at configuration phase will additionaly search for EasyExif in (TOP_SOURCE_DIR)/3rd_party/easyexif.
  So if it is not installed in your system you may:
  - cd photo_broom_sources
  - mkdir 3rd_party
  - git clone https://github.com/mayanklahiri/easyexif.git

or select proper checkbox in cmake-gui tool.

Tested compilers:
1. gcc  (Linux and Windows)
        At least 4.8.0 version is required (due to c++11).
        gcc has support for OpenMP which will be used for various tasks.

2. clang (Linux)

3. Visual studio (Windows)
   At least Visual Studio 2013 is required with Visual C++ Compiler Nov 2013 CTP (CTP_Nov2013) (due to c++11). Service Pack 2 is required (www.microsoft.com/pl-pl/download/details.aspx?id=42666)

PhotoBroom cannot be run from compilation dir without installing.
On Linux it will search for plugins in destination (installation) dir.
Build 'install' target to install PhotoBroom. Then you can launch it.
On Windows operating system, PhotoBroom searches for plugins and translations,
in location relative to exe file.
To make debuging possible on Windows, set DEVELOPER_BUILD option to ON.
This will force PhotoBroom to look for plugins and translations in location
defined by CMAKE_INSTALL_PREFIX (so as it does on Linux).

Extra targets available for Windows:
'deploy' - prepares extra dir with Qt's libraries and plugins required by PhotoBroom.
'install' target will install not only PhotoBroom's files but also Qt's libraries and translations. Other libraries will be also included.
'package' target will create a package (Intallator) with all files required for runing PhotoBroom on other Windows machines
